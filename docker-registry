=> Whenever we install Docker on CentOS or RHEL Servers Docker public Registry is enabled so when we run ‘docker pull‘ or 
   ‘docker search‘ command it will go to Docker public registry (Docker Hub) and will fetch the required container images. 
   But it is not idea to fetch the Docker container images from public registry when you are using Docker in an organization, 
   for the best practice we should have our own private Docker registry or repository. Docker Registry or repository is a place
   where Docker container images are stored.

################ how to setup our own Docker private registry on CentOS 7.x #################

=> I will be using three CentOS 7.x Servers and assuming docker is already installed and its service is up and running on 
   all three servers. 
=> Below are the details of my three servers:

=> docker-repo.example.com {192.168.56.14} -> It will act as my Docker private Registry Server

=> docker.developers.com {192.168.56.29} -> On this Server Docker admins and developers will create their own container
   images either with dockerfile or with compose and then they will upload these images to their own docker private registry
   server (docker-repo.example.com) with docker push command
   
=> docker.download.com {192.168.56.31} -> On this Server we will download docker container images from our own private 
  registry server with ‘docker pull‘ command

Note : Update the /etc/hosts file in case DNS server is not configured so that servers can be reachable with their
       respective hostname or dns name.
       
#vim /etc/hosts
   192.168.56.14     docker-repo.example.com docker-repo
   192.168.56.29     docker.developers.com   developers
   192.168.56.31     docker.download.com     download

         Work Flow Diagram
         =================
     
     -----------------    Image create/modefied   -----------------                   -------------------
     | Developer     |   via dockerfile           |  Docker-repo  |  Docker pull      | docker container|
     |               |=========================>  |  Server       |=================> |image downloaded |
     |   server      |                            |               |                   |by other team    |
     -----------------                            -----------------                   --------------------

=> Step:1 Download and start registry Container on your private registry server
   
=> Login to the server which you want to configure as Docker Private Registry Server, in my case it is 
   “docker-repo.example.com”.I am assuming Docker package is already installed on it and its service is up and running.
   In case Docker is not installed please refer the below
   
#### How to install Docker on CentOS 7 ####
   
=> Next task is to start the program or script which will configure and make your server as Registry Server. 
   That Program or script  is started by running a docker registry container. Let’s first download the registry 
   container using beneath command 
   
 [root@docker-repo ~]# docker pull registry      
 
=> Once the image is downloaded verify which commands will be executed when we start registry container image.
 
   [root@docker-repo ~]# docker history registry
 
=> Now start the registry container using below command
 
   [root@docker-repo ~]# docker run -dit -p 5000:5000 --name registry registry
 
=> Above Command will start the registry container with name registry and also we set the patting rule so that if any 
    request comes to ‘docker-repo.example.com‘ on 5000 port then request will be redirected to registry container on 5000 port.
 
    [root@docker-repo ~]# docker ps
 
Note: In case firewall is enabled on your private registry server then open 80 port using the following command
 
     [root@docker-repo ~]# firewall-cmd --permanent --add-port=80/tcp
 
     [root@docker-repo ~]# firewall-cmd --reload
 
Step:2 Create Docker Container Image and upload it to Private  Registry Server 
=======
 
=> Let’s assume I have build Ubuntu 16.04 docker container image with Dockerfile on ‘docker.developer.com‘. 
 In Case you are not familiar with dockerfile then refer the below.
 
 ############# How to build Docker Container Images with Dockerfile #############
 
=> We can upload a container image to the  registry server with “docker push” command but before start uploading it 
   we have make two changes
 
=>1. Make sure the image name is created with format  “servername:portnumber/imagename:tags“. By default docker pull command
     will try to upload the image in public registry and if we create image name with format mentioned above then docker pull
     command will upload it to the server mentioned in the image name. so in my case server name would be “docker-repo.example.com”
   
=> To change the name of docker image use docker tag command, example is shown below

   [root@developer ~]# docker tag ubuntu:16.04 docker-repo.example.com:5000/ubuntu:16.04 

=>2. Change the docker push https connection to http. Whenever we use ‘docker push’ command it will try to make https connection
  to the registry server but in case of private registry server setup, it accepts only http connection from the client(dkengine1.example.com)
  
=> Edit the file “/usr/lib/systemd/system/docker.service” and change the parameter
  
   ExecStart=/usr/bin/dockerd

   to

   ExecStart=/usr/bin/dockerd –insecure-registry docker-repo.example.com:5000
  
=> Reload daemon service and restart Docker service
  
  [root@developer ~]# systemctl daemon-reload
  [root@developer ~]# systemctl restart docker
  
=> Now upload the image to private registry server using beneath command
  
  [root@developer ~]# docker push docker-repo.example.com:5000/ubuntu:16.04
  
=>Step:3 Download Docker Container image from Private Registry Server

=> Login  to ‘docker.download.com’ server and use ‘docker pull’ command to download container image from your private registry
   server. By default docker pull command also makes https connection with registry server but our private registry accepts only 
   http connection.
   
=> Edit the file “/usr/lib/systemd/system/docker.service” and change the parameter

   #vi /usr/lib/systemd/system/docker.service

   ExecStart=/usr/bin/dockerd

  to

   ExecStart=/usr/bin/dockerd –insecure-registry docker-repo.example.com:5000
   
=> Reload daemon service and restart docker service

   [root@download ~]# systemctl daemon-reload ; systemctl restart docker

=> Now download the Container image using beneath command

   [root@download ~]# docker pull docker-repo.example.com:5000/ubuntu:16.04

=> Now verify the image with ‘docker images‘ command

[root@download ~]# docker images



  
  


 
 
 
                                   




https://www.linuxtechi.com/setup-docker-private-registry-centos-7-rhel-7/
